name: data_daily_updating
# Controls when the workflow will run
on:
  # # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: ["main"]
  # pull_request:
  #   branches: ["main"]
  schedule:
    # run 4h30min every day
    - cron: "30 7 * * *"  # Fixed cron syntax
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  data_daily_updating:
    runs-on: ubuntu-latest
    # continue-on-error: true
    steps:
      #### actions/checkout ____________________________________________________
      # @see https://github.com/actions/checkout
      - uses: actions/checkout@v4
        with:
          submodules: false  # Don't fetch submodules initially
      
      #### Handle submodule manually for better error handling _________________
      - name: Initialize and update submodules
        run: |
          git submodule init
          # Try to update submodule, if it fails, clone fresh
          if ! git submodule update --recursive; then
            echo "Submodule update failed, trying to fix..."
            git submodule deinit -f oswm_codebase
            rm -rf .git/modules/oswm_codebase
            git rm -f oswm_codebase
            git submodule add https://github.com/kauevestena/oswm_codebase.git oswm_codebase
            git submodule update --init --recursive
          fi
      
      - name: Update submodule to latest main
        run: |
          cd oswm_codebase
          git fetch origin
          git reset --hard origin/main
          cd ..
      
      #### setup-python ________________________________________________________
      # @see https://github.com/actions/setup-python
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: 'pip' # caching pip dependencies
      
      #### setup dependencies __________________________________________________
      - run: pip install -r oswm_codebase/requirements.txt
      
      #### main ________________________________________________________________
      - run: sh oswm_codebase/runners/daily.sh
  
      #### upload ______________________________________________________________
      # @see https://github.com/actions/checkout#push-a-commit-using-the-built-in-token
      - name: Commit and push changes
        run: |
          DATETIME="$(TZ=":America/Sao_Paulo" date +"%Y-%m-%d")"
          COMMIT_MESSAGE="data updating at $DATETIME"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git pull
          git add .
          # Only commit if there are changes
          if ! git diff --staged --quiet; then
            git commit -m "$COMMIT_MESSAGE"
            git push
          else
            echo "No changes to commit"
          fi